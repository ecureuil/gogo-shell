<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2010 OW2 Chameleon
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.ow2.chameleon.shell</groupId>
    <artifactId>chameleon-shell</artifactId>
    <version>0.3.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ow2.chameleon.shell</groupId>
  <artifactId>gogo-distribution</artifactId>
  <packaging>pom</packaging>
  <version>0.3.0-SNAPSHOT</version>

  <name>OW2 Chameleon Shell :: Gogo Distribution</name>

  <!-- Default Properties -->
  <properties>

    <distribution.target>${project.build.directory}/chameleon</distribution.target>
    <!--  Core directory -->
    <core.dir>${distribution.target}/core</core.dir>
    <!--  Runtime directory -->
    <runtime.dir>${distribution.target}/runtime</runtime.dir>
    <!--  Application directory -->
    <application.dir>${distribution.target}/application</application.dir>
    <!--  Deploy directory -->
    <deploy.dir>${distribution.target}/deploy</deploy.dir>
  </properties>
  

  <dependencies>
    <!-- This dep is just here to ensure that the console is build before the distribution -->
    <dependency>
      <groupId>org.ow2.chameleon.shell</groupId>
      <artifactId>chameleon-startup-console</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>copy-runtime</id>
            <phase>compile</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>

                <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - -->
                <!-- As we're depending on iPOJO >= 1.5.0, we cannot     -->
                <!-- extends the usual template POM: we need to recreate -->
                <!-- the whole packaging ourself.                        -->
                <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - -->

                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.framework</artifactId>
                  <version>2.0.2</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <!-- TODO I would like to remove the old shell, but the chameleon start-up
                       process check if this bundle is installed or not,
                       not very flexible :) -->
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.shell</artifactId>
                  <version>1.4.1</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <!-- TODO Should be removed as well -->
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.shell.tui</artifactId>
                  <version>1.4.1</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.osgi</groupId>
                  <artifactId>org.osgi.compendium</artifactId>
                  <version>4.2.0</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.configadmin</artifactId>
                  <version>1.2.4</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.fileinstall</artifactId>
                  <version>2.0.4</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.ipojo</artifactId>
                  <version>${ipojo.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.ipojo.arch</artifactId>
                  <version>1.4.0</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>

                <artifactItem>
                  <groupId>org.ow2.chameleon</groupId>
                  <artifactId>core</artifactId>
                  <version>0.0.1-SNAPSHOT</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.slf4j</groupId>
                  <artifactId>slf4j-api</artifactId>
                  <version>1.5.8</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-classic</artifactId>
                  <version>0.9.9</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>ch.qos.logback</groupId>
                  <artifactId>logback-core</artifactId>
                  <version>0.9.9</version>
                  <type>jar</type>
                  <overWrite>false</overWrite>
                  <outputDirectory>${core.dir}</outputDirectory>
                </artifactItem>
                
                <!-- In first, add the gogo runtime libs -->
                <!-- - - - - - - - - - - - - - - - - - - -->
                <artifactItem>
                  <!-- The commands API (with @Command annotation, ...) -->
                  <groupId>org.apache.felix.gogo</groupId>
                  <artifactId>org.apache.felix.gogo.commands</artifactId>
                  <version>${gogo.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <!-- The core of the shell -->
                  <groupId>org.apache.felix.gogo</groupId>
                  <artifactId>org.apache.felix.gogo.runtime</artifactId>
                  <version>${gogo.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>

                <!-- Then, add our handler and our commands -->
                <!-- - - - - - - - - - - - - - - - - - - -->
                <artifactItem>
                  <groupId>org.ow2.chameleon.shell</groupId>
                  <artifactId>chameleon-shell-gogo</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <!-- Simple testing commands -->
                  <groupId>org.ow2.chameleon.shell.commands</groupId>
                  <artifactId>chameleon-hello-command</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <!-- Shell built-in commands -->
                  <groupId>org.ow2.chameleon.shell.commands</groupId>
                  <artifactId>chameleon-builtin-commands</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.ow2.chameleon.shell.commands</groupId>
                  <artifactId>chameleon-ipojo-commands</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.ow2.chameleon.shell.commands</groupId>
                  <artifactId>chameleon-config-commands</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.ipojo.handler.whiteboard</artifactId>
                  <version>${wbp.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                
                <artifactItem>
                  <groupId>org.ow2.chameleon.shell.commands</groupId>
                  <artifactId>chameleon-ssh-command</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>

                <!-- Add our start-up console -->
                <!-- - - - - - - - - - - - - -->
                <artifactItem>
                  <!-- This automatically starts a local JLine shell console at startup -->
                  <groupId>org.ow2.chameleon.shell</groupId>
                  <artifactId>chameleon-startup-console</artifactId>
                  <version>${project.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>

                <!-- Do not forget iPOJO composite -->
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.ipojo.composite</artifactId>
                  <version>${ipojo.version}</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>
                
                <artifactItem>
                  <groupId>org.apache.felix</groupId>
                  <artifactId>org.apache.felix.ipojo.api</artifactId>
                  <version>1.4.0</version>
                  <overWrite>false</overWrite>
                  <outputDirectory>${runtime.dir}</outputDirectory>
                </artifactItem>

              </artifactItems>
            </configuration>
          </execution>
        </executions>
    </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <finalName>${project.artifactId}-${project.version}</finalName>
          <tarLongFileMode>gnu</tarLongFileMode>
          <descriptors>
            <descriptor>src/main/assembly/assembly.xml</descriptor>
          </descriptors>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>